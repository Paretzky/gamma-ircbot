{
  "author": {
    "name": "Franklin van de Meent",
    "email": "fr@nkl.in",
    "url": "http://frankl.in"
  },
  "name": "youtube-feeds",
  "description": "Access public YouTube API feeds, mostly with the clean JSON-C results",
  "version": "1.0.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/fvdm/nodejs-youtube.git"
  },
  "bugs": {
    "url": "https://github.com/fvdm/nodejs-youtube/issues"
  },
  "main": "youtube-feeds.js",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "keywords": [
    "youtube",
    "video",
    "feeds",
    "api"
  ],
  "license": {
    "type": "Public Domain",
    "url": "https://github.com/fvdm/nodejs-youtube/raw/master/UNLICENSE"
  },
  "readme": "nodejs-youtube\n==============\n\n\nAccess public YouTube API feeds from your Node.js apps\n\n\n## Installation\n\n[![Build Status](https://secure.travis-ci.org/fvdm/nodejs-youtube.png?branch=master)](http://travis-ci.org/fvdm/nodejs-youtube)\n\n\n### From NPM registry\n\nThe NPM release is always the recent *stable* version.\n\n```\nnpm install youtube-feeds\n```\n\n```js\nvar youtube = require('youtube-feeds')\n```\n\n### From Github\n\nThe code on Github is the most recent version, but may be untested.\n\n```\ngit clone https://github.com/fvdm/nodejs-youtube\n```\n\n```js\nvar youtube = require('/path/to/nodejs-youtube')\n```\n\n\n## Usage\n\n```js\n// load the module\nvar youtube = require('youtube-feeds')\n\n// search parkour videos\nyoutube.feeds.videos( {q: 'parkour'}, console.log )\n```\n\n\nFeeds\n=====\n\n\n## feeds.videos\n### ( [vars], callback )\n\nGet a list of recently published or updated videos, or search them all, filter, sort, etc.\n\n[API docs: custom query parameters](https://developers.google.com/youtube/2.0/developers_guide_protocol_api_query_parameters#Custom_parameters)\n\n```js\nyoutube.feeds.videos(\n\t{\n\t\tq: \t\t'parkour',\n\t\t'max-results':\t2,\n\t\torderby:\t'published'\n\t},\n\tconsole.log\n)\n```\n\nOutput:\n\n```js\n{ updated: '2012-06-18T17:55:11.294Z',\n  totalItems: 6985,\n  startIndex: 1,\n  itemsPerPage: 2,\n  items: \n   [ { id: 'WEeqHj3Nj2c',\n       uploaded: '2006-06-08T01:17:06.000Z',\n       updated: '2012-06-18T15:53:06.000Z',\n       uploader: 'sauloca',\n       category: 'Sports',\n       title: 'Parkour and FreeRunning',\n       description: 'Edited by: Saulo Sampson Chase [..]',\n       tags: \n        [ 'le',\n          'parkour',\n          'free',\n          'running' ],\n       thumbnail: \n        { sqDefault: 'http://i.ytimg.com/vi/WEeqHj3Nj2c/default.jpg',\n          hqDefault: 'http://i.ytimg.com/vi/WEeqHj3Nj2c/hqdefault.jpg' },\n       player: \n        { default: 'https://www.youtube.com/watch?v=WEeqHj3Nj2c&feature=youtube_gdata_player',\n          mobile: 'https://m.youtube.com/details?v=WEeqHj3Nj2c' },\n       content: \n        { '1': 'rtsp://v8.cache8.c.youtube.com/CiILENy73wIaGQlnj809HqpHWBMYDSANFEgGUgZ2aWRlb3MM/0/0/0/video.3gp',\n          '5': 'https://www.youtube.com/v/WEeqHj3Nj2c?version=3&f=videos&app=youtube_gdata',\n          '6': 'rtsp://v8.cache8.c.youtube.com/CiILENy73wIaGQlnj809HqpHWBMYESARFEgGUgZ2aWRlb3MM/0/0/0/video.3gp' },\n       duration: 218,\n       geoCoordinates: { latitude: -7.100892543792725, longitude: -34.91455078125 },\n       rating: 4.862864,\n       likeCount: '85314',\n       ratingCount: 88343,\n       viewCount: 32718590,\n       favoriteCount: 99541,\n       accessControl: \n        { comment: 'denied',\n          commentVote: 'allowed',\n          videoRespond: 'moderated',\n          rate: 'allowed',\n          embed: 'allowed',\n          list: 'allowed',\n          autoPlay: 'allowed',\n          syndicate: 'allowed' } } ] }\n```\n\n\n## feeds.related\n### ( videoid, [vars], callback )\n\nGet related videos for a video with **videoid**.\n\n\n## feeds.responses \n### ( videoid, [vars], callback )\n\nGet videos in response to **videoid**.\n\n\n## feeds.comments\n### ( videoid, [vars], callback )\n\nGet comments to a video. This is still in the original XML-to-JSON format as YouTube does not have JSON-C available for this feed. This may change in future (major) versions of this module.\n\n\n## feeds.standard\n### ( feed, [vars], callback )\n\nGet a standard feed, such as most viewed or top rated videos. Worldwide, local or by subject (or a combination).\n\n[API docs: Standard feeds](https://developers.google.com/youtube/2.0/reference#Standard_feeds)\n\n\n**Example:** most recent videos worldwide:\n\n```js\nyoutube.feeds.standard( 'most_recent', console.log )\n```\n\n\n**Example:** today's top-rated News videos in the Netherlands:\n\n```js\nyoutube.feeds.standard( 'NL/top_rated_News', {time: 'today'}, console.log )\n```\n\n\n## feeds.playlist\n### ( playlistid, [vars], callback )\n\nGet videos on a certain playlist.\n\n\nVideo\n=====\n\n\nThe **video** function provides shorthand methods for one specific video.\n\n\n## video\n### ( videoid, [callback] )\n\nSame as video.details\n\n```js\nyoutube.video( 'ern37eWDnT0', console.log )\n```\n\n\n## video.details\n### ( callback )\n\nGet details for one video.\n\n```js\nyoutube.video( 'ern37eWDnT0' ).details( console.log )\n```\n\n\n## video.related\n### ( [vars], callback )\n\nGet related videos, same as **feeds.related**.\n\n```js\nyoutube.video( 'ern37eWDnT0' ).related( {'max-results': 2}, console.log )\n```\n\n\n## video.responses\n### ( [vars], callback )\n\nGet videos in response to one video, same as **feeds.responses**.\n\n```js\nyoutube.video( 'ern37eWDnT0' ).responses( {'max-results': 2}, console.log )\n```\n\n\n## videos.comments\n### ( [vars], callback )\n\nGet comments to a video, same as **feeds.comments**.\n\n```js\nyoutube.video( 'ern37eWDnT0' ).comments( {'max-results': 2}, console.log )\n```\n\n\nUser\n====\n\nGet (public) feed data for one specific user.\n\n\n## user\n### ( userid, [callback] )\n\nSame as user.profile\n\n```js\nyoutube.user( 'unknowntitle', console.log )\n```\n\n\n## user.profile\n### ( callback )\n\nGet user profile, in old XML-to-JSON style.\n\n```js\nyoutube.user( 'unknowntitle' ).profile( console.log )\n```\n\n\n## user.favorites\n### ( [vars], callback )\n\nGet the user's favorite videos. You can optionally filter the results like the other feeds.\n\n```js\nyoutube.user( 'unknowntitle' ).favorites( console.log )\n```\n\n## user.playlists\n### ( [vars], callback )\n\nGet user playlists. Use **feeds.playlist** to get the videos.\n\n\nCommunication\n=============\n\n\n## talk\n### ( path, [fields], callback, [oldJSON] )\n\nDirectly talk to the API. This function takes care of connecting and calling the callback only when valid JSON is returned.\n\n* **path** - string - full method path without leading slash\n* **fields** - object - GET parameters\n* **callback** - function - callback function to receive results\n* **oldJSON** - force old XML-to-JSON format instead of clean JSON-C\n\n\nLicense\n=======\n\n\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org>\n",
  "_id": "youtube-feeds@1.0.3",
  "_from": "youtube-feeds"
}
